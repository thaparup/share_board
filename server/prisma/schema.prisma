generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id              String            @id @default(cuid())
  name            String
  email           String            @unique
  password        String
  avatarImage     String?
  workspaceMember WorkspaceMember[]
  task            Task[]
  assignments     TaskAssignment[]
  workspace       Workspace[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
}

model Task {
  id                String              @id @default(cuid())
  name              String
  description       String
  priority          Priority
  progress          Progress
  workspace         Workspace           @relation("workspace", fields: [workspaceId], references: [id])
  workspaceId       String
  taskCreator       User                @relation(fields: [taskCreatorId], references: [id])
  taskCreatorId     String
  taskCreatorName   String
  taskCreatorEmail  String
  TaskTodoCheckList TaskTodoCheckList[]
  dueDate           DateTime
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  TaskAssignment    TaskAssignment[]
}

model TaskAssignment {
  id                String   @id @default(cuid())
  assignedTask      Task     @relation(fields: [taskId], references: [id])
  taskId            String
  assignedUser      User     @relation(fields: [assignedUserId], references: [id])
  assignedUserId    String
  assignedUserName  String
  assignedUserEmail String
  assignedAt        DateTime @default(now())
}

model TaskTodoCheckList {
  id          String    @id @default(cuid())
  name        String
  checked     Boolean   @default(false)
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  Task        Task?     @relation(fields: [taskId], references: [id])
  taskId      String?
}

model Workspace {
  id                 String              @id @default(cuid())
  name               String
  workspaceCreator   User                @relation(fields: [workspaceCreatorId], references: [id])
  workspaceCreatorId String
  workspaceMember    WorkspaceMember[]
  tasks              Task[]              @relation("workspace")
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  TaskTodoCheckList  TaskTodoCheckList[]
}

model WorkspaceMember {
  id          String    @id @default(cuid())
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  member      User      @relation(fields: [memberId], references: [id])
  memberId    String
  role        Role      @default(MEMBER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Role {
  ADMIN
  MEMBER
}

enum Progress {
  IN_PROGRESS
  COMPLETED
  PENDING
}
